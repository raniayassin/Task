<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="4" total="13" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="226439" started-at="2022-02-19T20:32:58 EET" finished-at="2022-02-19T20:36:45 EET">
    <groups>
    </groups>
    <test name="Test" duration-ms="226439" started-at="2022-02-19T20:32:58 EET" finished-at="2022-02-19T20:36:45 EET">
      <class name="tests.SignupWithEmailAlreadyExist">
        <test-method status="PASS" signature="startDriver()[pri:0, instance:tests.SignupWithEmailAlreadyExist@56620197]" name="startDriver" is-config="true" duration-ms="36301" started-at="2022-02-19T20:33:36 EET" finished-at="2022-02-19T20:34:12 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method status="PASS" signature="signupWithEmailAlreadyExist()[pri:1, instance:tests.SignupWithEmailAlreadyExist@56620197]" name="signupWithEmailAlreadyExist" duration-ms="2957" started-at="2022-02-19T20:34:12 EET" finished-at="2022-02-19T20:34:15 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupWithEmailAlreadyExist -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:tests.SignupWithEmailAlreadyExist@56620197]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2022-02-19T20:34:15 EET" finished-at="2022-02-19T20:34:15 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signupWithEmailAlreadyExist status=SUCCESS method=SignupWithEmailAlreadyExist.signupWithEmailAlreadyExist()[pri:1, instance:tests.SignupWithEmailAlreadyExist@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="stopDriver()[pri:0, instance:tests.SignupWithEmailAlreadyExist@56620197]" name="stopDriver" is-config="true" duration-ms="752" started-at="2022-02-19T20:34:15 EET" finished-at="2022-02-19T20:34:16 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- tests.SignupWithEmailAlreadyExist -->
      <class name="tests.SignupWithLastNameSameAsFirstName">
        <test-method status="PASS" signature="startDriver()[pri:0, instance:tests.SignupWithLastNameSameAsFirstName@5f058f00]" name="startDriver" is-config="true" duration-ms="29253" started-at="2022-02-19T20:35:48 EET" finished-at="2022-02-19T20:36:17 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method status="FAIL" signature="signupWithLastNameSameAsFirstName()[pri:1, instance:tests.SignupWithLastNameSameAsFirstName@5f058f00]" name="signupWithLastNameSameAsFirstName" duration-ms="3469" started-at="2022-02-19T20:36:17 EET" finished-at="2022-02-19T20:36:21 EET">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at org.testng.Assert.assertFalse(Assert.java:77)
at tests.SignupWithLastNameSameAsFirstName.signupWithLastNameSameAsFirstName(SignupWithLastNameSameAsFirstName.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupWithLastNameSameAsFirstName -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:tests.SignupWithLastNameSameAsFirstName@5f058f00]" name="takeScreenshot" is-config="true" duration-ms="864" started-at="2022-02-19T20:36:21 EET" finished-at="2022-02-19T20:36:22 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signupWithLastNameSameAsFirstName status=FAILURE method=SignupWithLastNameSameAsFirstName.signupWithLastNameSameAsFirstName()[pri:1, instance:tests.SignupWithLastNameSameAsFirstName@5f058f00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="stopDriver()[pri:0, instance:tests.SignupWithLastNameSameAsFirstName@5f058f00]" name="stopDriver" is-config="true" duration-ms="1" started-at="2022-02-19T20:36:22 EET" finished-at="2022-02-19T20:36:22 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- tests.SignupWithLastNameSameAsFirstName -->
      <class name="tests.SignupWithInvalidFirstAndLastName">
        <test-method status="PASS" signature="startDriver()[pri:0, instance:tests.SignupWithInvalidFirstAndLastName@6eda5c9]" name="startDriver" is-config="true" duration-ms="85364" started-at="2022-02-19T20:34:16 EET" finished-at="2022-02-19T20:35:41 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method status="FAIL" signature="signupWithInvalidFirstAndLastName()[pri:1, instance:tests.SignupWithInvalidFirstAndLastName@6eda5c9]" name="signupWithInvalidFirstAndLastName" duration-ms="5627" started-at="2022-02-19T20:35:41 EET" finished-at="2022-02-19T20:35:47 EET">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at org.testng.Assert.assertFalse(Assert.java:77)
at tests.SignupWithInvalidFirstAndLastName.signupWithInvalidFirstAndLastName(SignupWithInvalidFirstAndLastName.java:45)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupWithInvalidFirstAndLastName -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:tests.SignupWithInvalidFirstAndLastName@6eda5c9]" name="takeScreenshot" is-config="true" duration-ms="867" started-at="2022-02-19T20:35:47 EET" finished-at="2022-02-19T20:35:48 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signupWithInvalidFirstAndLastName status=FAILURE method=SignupWithInvalidFirstAndLastName.signupWithInvalidFirstAndLastName()[pri:1, instance:tests.SignupWithInvalidFirstAndLastName@6eda5c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="stopDriver()[pri:0, instance:tests.SignupWithInvalidFirstAndLastName@6eda5c9]" name="stopDriver" is-config="true" duration-ms="2" started-at="2022-02-19T20:35:48 EET" finished-at="2022-02-19T20:35:48 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- tests.SignupWithInvalidFirstAndLastName -->
      <class name="tests.SignupWithInvalidPassword">
        <test-method status="PASS" signature="startDriver()[pri:0, instance:tests.SignupWithInvalidPassword@192d43ce]" name="startDriver" is-config="true" duration-ms="18299" started-at="2022-02-19T20:36:22 EET" finished-at="2022-02-19T20:36:40 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method status="FAIL" signature="signupWithInvalidPassword()[pri:1, instance:tests.SignupWithInvalidPassword@192d43ce]" name="signupWithInvalidPassword" duration-ms="4127" started-at="2022-02-19T20:36:40 EET" finished-at="2022-02-19T20:36:44 EET">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at org.testng.Assert.assertFalse(Assert.java:77)
at tests.SignupWithInvalidPassword.signupWithInvalidPassword(SignupWithInvalidPassword.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupWithInvalidPassword -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:tests.SignupWithInvalidPassword@192d43ce]" name="takeScreenshot" is-config="true" duration-ms="924" started-at="2022-02-19T20:36:44 EET" finished-at="2022-02-19T20:36:45 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signupWithInvalidPassword status=FAILURE method=SignupWithInvalidPassword.signupWithInvalidPassword()[pri:1, instance:tests.SignupWithInvalidPassword@192d43ce] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="stopDriver()[pri:0, instance:tests.SignupWithInvalidPassword@192d43ce]" name="stopDriver" is-config="true" duration-ms="1" started-at="2022-02-19T20:36:45 EET" finished-at="2022-02-19T20:36:45 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- tests.SignupWithInvalidPassword -->
      <class name="tests.SignUpWithValidData">
        <test-method status="PASS" signature="startDriver()[pri:0, instance:tests.SignUpWithValidData@7193666c]" name="startDriver" is-config="true" duration-ms="25945" started-at="2022-02-19T20:32:58 EET" finished-at="2022-02-19T20:33:24 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method status="PASS" signature="signup()[pri:1, instance:tests.SignUpWithValidData@7193666c]" name="signup" duration-ms="4336" started-at="2022-02-19T20:33:24 EET" finished-at="2022-02-19T20:33:29 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:tests.SignUpWithValidData@7193666c]" name="takeScreenshot" is-config="true" duration-ms="4" started-at="2022-02-19T20:33:29 EET" finished-at="2022-02-19T20:33:29 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signup status=SUCCESS method=SignUpWithValidData.signup()[pri:1, instance:tests.SignUpWithValidData@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="login()[pri:2, instance:tests.SignUpWithValidData@7193666c]" name="login" duration-ms="2317" started-at="2022-02-19T20:33:29 EET" depends-on-methods="tests.SignUpWithValidData.signup" finished-at="2022-02-19T20:33:31 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:tests.SignUpWithValidData@7193666c]" name="takeScreenshot" is-config="true" duration-ms="1" started-at="2022-02-19T20:33:31 EET" finished-at="2022-02-19T20:33:31 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=SignUpWithValidData.login()[pri:2, instance:tests.SignUpWithValidData@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkRegisteredUserData()[pri:3, instance:tests.SignUpWithValidData@7193666c]" name="checkRegisteredUserData" duration-ms="1394" started-at="2022-02-19T20:33:31 EET" depends-on-methods="tests.SignUpWithValidData.login" finished-at="2022-02-19T20:33:33 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRegisteredUserData -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:tests.SignUpWithValidData@7193666c]" name="takeScreenshot" is-config="true" duration-ms="1" started-at="2022-02-19T20:33:33 EET" finished-at="2022-02-19T20:33:33 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkRegisteredUserData status=SUCCESS method=SignUpWithValidData.checkRegisteredUserData()[pri:3, instance:tests.SignUpWithValidData@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="updateProfile()[pri:4, instance:tests.SignUpWithValidData@7193666c]" name="updateProfile" duration-ms="1504" started-at="2022-02-19T20:33:33 EET" depends-on-methods="tests.SignUpWithValidData.checkRegisteredUserData" finished-at="2022-02-19T20:33:34 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateProfile -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:tests.SignUpWithValidData@7193666c]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2022-02-19T20:33:34 EET" finished-at="2022-02-19T20:33:34 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateProfile status=SUCCESS method=SignUpWithValidData.updateProfile()[pri:4, instance:tests.SignUpWithValidData@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="logout()[pri:5, instance:tests.SignUpWithValidData@7193666c]" name="logout" duration-ms="1083" started-at="2022-02-19T20:33:34 EET" depends-on-methods="tests.SignUpWithValidData.updateProfile" finished-at="2022-02-19T20:33:35 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:tests.SignUpWithValidData@7193666c]" name="takeScreenshot" is-config="true" duration-ms="2" started-at="2022-02-19T20:33:35 EET" finished-at="2022-02-19T20:33:35 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=SignUpWithValidData.logout()[pri:5, instance:tests.SignUpWithValidData@7193666c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="stopDriver()[pri:0, instance:tests.SignUpWithValidData@7193666c]" name="stopDriver" is-config="true" duration-ms="783" started-at="2022-02-19T20:33:35 EET" finished-at="2022-02-19T20:33:36 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
        <test-method status="PASS" signature="generateReport()[pri:0, instance:tests.SignUpWithValidData@7193666c]" name="generateReport" is-config="true" duration-ms="36" started-at="2022-02-19T20:36:45 EET" finished-at="2022-02-19T20:36:45 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- tests.SignUpWithValidData -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
